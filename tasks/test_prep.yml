
#  - name: setup throttling for yum
#    command: echo "throttle=300k" >> /etc/yum.conf
#    when: ansible_os_family == "RedHat"

#  - name: setup throttling for apt
#    copy: src=../apt-throttling
#          dest=/etc/apt/apt.conf.d/
#          mode=0640 owner=root group=root
#    when: ansible_os_family == "Debian"

  - name: download epel release package on centos 5
    get_url:
      url: https://dl.fedoraproject.org/pub/epel/epel-release-latest-5.noarch.rpm
      dest: ~/epel-release-latest-5.noarch.rpm
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "5"

  - name: setup epel 5 repo
    command: "{{ item }}"
    with_items:
    - rpm -ivH ~/epel-release-latest-5.noarch.rpm
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "5"

  - name: setup epel 6 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: setup epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: install needed packages for running tests with apt
    apt: name="{{ item }}" update_cache=yes
    with_items:
    - pv
    - unzip
    - wget
    when: ansible_os_family == "Debian"

  - name: install needed packages for running tests with yum
    yum: name="{{ item }}" state=latest
    with_items:
    - pv
    - libselinux-python
    - unzip
    - wget
    when: ansible_os_family == "RedHat"

  - name: register SLES for updates
    command: suse_register -a email="@@SLES_REG_EMAIL@@" -a regcode-sles=@@SLES_REG_CODE@@
    when: ansible_os_family == "Suse"

  # - name: setup SDK repo on SLES
  #   zypper: name="{{ item }}" state=present
  #   with_items:
  #   - /package-testing/sle-sdk-release-11.4-1.55.x86_64.rpm
  #   - /package-testing/sle-sdk-release-SDK-11.4-1.55.x86_64.rpm
  #   when: ansible_os_family == "Suse"

  - name: install needed packages for running tests with zypper
    zypper: name="{{ item }}" state=latest
    with_items:
    - wget
    - unzip
    when: ansible_os_family == "Suse"

  - name: download package-testing repo with wget
    command: "{{ item }}"
    with_items:
    - wget https://github.com/Percona-QA/package-testing/archive/master.zip
    - unzip master.zip
    - rm -f master.zip
    - mv package-testing-master /package-testing

  - name: install latest bats from github
    command: "{{ item }}"
    with_items:
    - wget https://github.com/sstephenson/bats/archive/master.zip
    - unzip master.zip
    - rm -f master.zip
    - bats-master/install.sh /usr/local
    - rm -rf bats-master
