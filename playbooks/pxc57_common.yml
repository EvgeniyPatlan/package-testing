---
# This playbook sets up the PXC node from testing repo

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: include tasks for test env setup
    include: ../tasks/test_prep.yml

  - name: include tasks for enabling testing repo
    include: ../tasks/enable_testing_repo.yml

  - name: disable selinux
    selinux: state=disabled
    when: ansible_os_family == "RedHat"

  - name: add firewall rules
    command: /sbin/iptables -I INPUT -s {{item}} -p tcp -j ACCEPT
    with_items:
    - 192.168.70.63
    - 192.168.70.62
    - 192.168.70.61
    when: ansible_os_family == "RedHat"

  - name: install PXC 5.7 new deb packages
    apt: name={{item}} update_cache=yes
    with_items:
    - percona-xtradb-cluster-full-57
    - python-mysqldb
    when: ansible_os_family == "Debian"

  - name: install PXC 5.7 new rpm packages
    yum: name={{item}} state=latest
    with_items:
    - Percona-XtraDB-Cluster-full-57
    - MySQL-python
    when: ansible_os_family == "RedHat"

  # stop mysql service
  - name: stop mysql service with service command
    command: service mysql stop

  - name: copy PXC config on centos 6
    template: src=../templates/my_rpm.j2 dest=/etc/my.cnf
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "6"

  - name: copy PXC config on centos 7
    template: src=../templates/my_rpm_7.j2 dest=/etc/my.cnf
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: copy PXC config on debian/ubuntu
    template: src=../templates/my.j2
              dest=/etc/mysql/my.cnf
              mode=0640 owner=mysql group=root
    when: ansible_os_family == "Debian"

  # start mysql service
  - command: service mysql start
